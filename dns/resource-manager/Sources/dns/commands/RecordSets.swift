// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.

// RecordSets is the the DNS Management Client.
import Foundation
import azureSwiftRuntime
extension Commands {
public struct RecordSets {
    public static func CreateOrUpdate(resourceGroupName: String, zoneName: String, relativeRecordSetName: String, recordType: RecordTypeEnum, subscriptionId: String, parameters: RecordSetProtocol) -> RecordSetsCreateOrUpdate {
        return CreateOrUpdateCommand(resourceGroupName: resourceGroupName, zoneName: zoneName, relativeRecordSetName: relativeRecordSetName, recordType: recordType, subscriptionId: subscriptionId, parameters: parameters)
    }
    public static func Delete(resourceGroupName: String, zoneName: String, relativeRecordSetName: String, recordType: RecordTypeEnum, subscriptionId: String) -> RecordSetsDelete {
        return DeleteCommand(resourceGroupName: resourceGroupName, zoneName: zoneName, relativeRecordSetName: relativeRecordSetName, recordType: recordType, subscriptionId: subscriptionId)
    }
    public static func Get(resourceGroupName: String, zoneName: String, relativeRecordSetName: String, recordType: RecordTypeEnum, subscriptionId: String) -> RecordSetsGet {
        return GetCommand(resourceGroupName: resourceGroupName, zoneName: zoneName, relativeRecordSetName: relativeRecordSetName, recordType: recordType, subscriptionId: subscriptionId)
    }
    public static func ListAllByDnsZone(resourceGroupName: String, zoneName: String, subscriptionId: String) -> RecordSetsListAllByDnsZone {
        return ListAllByDnsZoneCommand(resourceGroupName: resourceGroupName, zoneName: zoneName, subscriptionId: subscriptionId)
    }
    public static func ListByDnsZone(resourceGroupName: String, zoneName: String, subscriptionId: String) -> RecordSetsListByDnsZone {
        return ListByDnsZoneCommand(resourceGroupName: resourceGroupName, zoneName: zoneName, subscriptionId: subscriptionId)
    }
    public static func ListByType(resourceGroupName: String, zoneName: String, recordType: RecordTypeEnum, subscriptionId: String) -> RecordSetsListByType {
        return ListByTypeCommand(resourceGroupName: resourceGroupName, zoneName: zoneName, recordType: recordType, subscriptionId: subscriptionId)
    }
    public static func Update(resourceGroupName: String, zoneName: String, relativeRecordSetName: String, recordType: RecordTypeEnum, subscriptionId: String, parameters: RecordSetProtocol) -> RecordSetsUpdate {
        return UpdateCommand(resourceGroupName: resourceGroupName, zoneName: zoneName, relativeRecordSetName: relativeRecordSetName, recordType: recordType, subscriptionId: subscriptionId, parameters: parameters)
    }
}
}
