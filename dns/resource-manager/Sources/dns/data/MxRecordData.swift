// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
import Foundation
import azureSwiftRuntime
internal struct MxRecordData : MxRecordProtocol {
    public var preference: Int32?
    public var exchange: String?

        enum CodingKeys: String, CodingKey {case preference = "preference"
        case exchange = "exchange"
        }

  public init()  {
  }

  public init(from decoder: Decoder) throws {
    let container = try decoder.container(keyedBy: CodingKeys.self)
      if container.contains(.preference) {
        self.preference = try container.decode(Int32?.self, forKey: .preference)
    }
    if container.contains(.exchange) {
        self.exchange = try container.decode(String?.self, forKey: .exchange)
    }
    if var pageDecoder = decoder as? PageDecoder  {
      if pageDecoder.isPagedData,
        let nextLinkName = pageDecoder.nextLinkName {
          pageDecoder.nextLink = try UnknownCodingKey.decodeStringForKey(decoder: decoder, keyForDecode: nextLinkName)
      }
    }
  }

  public func encode(to encoder: Encoder) throws {
    var container = encoder.container(keyedBy: CodingKeys.self)
    if self.preference != nil {try container.encode(self.preference, forKey: .preference)}
    if self.exchange != nil {try container.encode(self.exchange, forKey: .exchange)}
  }
}

extension DataFactory {
  public static func createMxRecordProtocol() -> MxRecordProtocol {
    return MxRecordData()
  }
}
