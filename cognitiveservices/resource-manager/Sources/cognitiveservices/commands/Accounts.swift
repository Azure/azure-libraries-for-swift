// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.

// Accounts is the cognitive Services Management Client
import Foundation
import azureSwiftRuntime
extension Commands {
public struct Accounts {
    public static func Create(resourceGroupName: String, accountName: String, subscriptionId: String, parameters: CognitiveServicesAccountCreateParametersProtocol) -> AccountsCreate {
        return CreateCommand(resourceGroupName: resourceGroupName, accountName: accountName, subscriptionId: subscriptionId, parameters: parameters)
    }
    public static func Delete(resourceGroupName: String, accountName: String, subscriptionId: String) -> AccountsDelete {
        return DeleteCommand(resourceGroupName: resourceGroupName, accountName: accountName, subscriptionId: subscriptionId)
    }
    public static func GetProperties(resourceGroupName: String, accountName: String, subscriptionId: String) -> AccountsGetProperties {
        return GetPropertiesCommand(resourceGroupName: resourceGroupName, accountName: accountName, subscriptionId: subscriptionId)
    }
    public static func List(subscriptionId: String) -> AccountsList {
        return ListCommand(subscriptionId: subscriptionId)
    }
    public static func ListByResourceGroup(resourceGroupName: String, subscriptionId: String) -> AccountsListByResourceGroup {
        return ListByResourceGroupCommand(resourceGroupName: resourceGroupName, subscriptionId: subscriptionId)
    }
    public static func ListKeys(resourceGroupName: String, accountName: String, subscriptionId: String) -> AccountsListKeys {
        return ListKeysCommand(resourceGroupName: resourceGroupName, accountName: accountName, subscriptionId: subscriptionId)
    }
    public static func ListSkus(resourceGroupName: String, accountName: String, subscriptionId: String) -> AccountsListSkus {
        return ListSkusCommand(resourceGroupName: resourceGroupName, accountName: accountName, subscriptionId: subscriptionId)
    }
    public static func RegenerateKey(resourceGroupName: String, accountName: String, subscriptionId: String, parameters: RegenerateKeyParametersProtocol) -> AccountsRegenerateKey {
        return RegenerateKeyCommand(resourceGroupName: resourceGroupName, accountName: accountName, subscriptionId: subscriptionId, parameters: parameters)
    }
    public static func Update(resourceGroupName: String, accountName: String, subscriptionId: String, parameters: CognitiveServicesAccountUpdateParametersProtocol) -> AccountsUpdate {
        return UpdateCommand(resourceGroupName: resourceGroupName, accountName: accountName, subscriptionId: subscriptionId, parameters: parameters)
    }
}
}
