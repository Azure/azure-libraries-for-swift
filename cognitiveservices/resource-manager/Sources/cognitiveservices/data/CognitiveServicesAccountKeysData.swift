// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
import Foundation
import azureSwiftRuntime
internal struct CognitiveServicesAccountKeysData : CognitiveServicesAccountKeysProtocol {
    public var key1: String?
    public var key2: String?

        enum CodingKeys: String, CodingKey {case key1 = "key1"
        case key2 = "key2"
        }

  public init()  {
  }

  public init(from decoder: Decoder) throws {
    let container = try decoder.container(keyedBy: CodingKeys.self)
      if container.contains(.key1) {
        self.key1 = try container.decode(String?.self, forKey: .key1)
    }
    if container.contains(.key2) {
        self.key2 = try container.decode(String?.self, forKey: .key2)
    }
    if var pageDecoder = decoder as? PageDecoder  {
      if pageDecoder.isPagedData,
        let nextLinkName = pageDecoder.nextLinkName {
          pageDecoder.nextLink = try UnknownCodingKey.decodeStringForKey(decoder: decoder, keyForDecode: nextLinkName)
      }
    }
  }

  public func encode(to encoder: Encoder) throws {
    var container = encoder.container(keyedBy: CodingKeys.self)
    if self.key1 != nil {try container.encode(self.key1, forKey: .key1)}
    if self.key2 != nil {try container.encode(self.key2, forKey: .key2)}
  }
}

extension DataFactory {
  public static func createCognitiveServicesAccountKeysProtocol() -> CognitiveServicesAccountKeysProtocol {
    return CognitiveServicesAccountKeysData()
  }
}
