// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
import Foundation
import azureSwiftRuntime
internal struct FailoverPoliciesData : FailoverPoliciesProtocol {
    public var failoverPolicies: [FailoverPolicyProtocol]

        enum CodingKeys: String, CodingKey {case failoverPolicies = "failoverPolicies"
        }

  public init(failoverPolicies: [FailoverPolicyProtocol])  {
    self.failoverPolicies = failoverPolicies
  }

  public init(from decoder: Decoder) throws {
    let container = try decoder.container(keyedBy: CodingKeys.self)
      self.failoverPolicies = try container.decode([FailoverPolicyData].self, forKey: .failoverPolicies)
    if var pageDecoder = decoder as? PageDecoder  {
      if pageDecoder.isPagedData,
        let nextLinkName = pageDecoder.nextLinkName {
          pageDecoder.nextLink = try UnknownCodingKey.decodeStringForKey(decoder: decoder, keyForDecode: nextLinkName)
      }
    }
  }

  public func encode(to encoder: Encoder) throws {
    var container = encoder.container(keyedBy: CodingKeys.self)
    try container.encode(self.failoverPolicies as! [FailoverPolicyData], forKey: .failoverPolicies)
  }
}

extension DataFactory {
  public static func createFailoverPoliciesProtocol(failoverPolicies: [FailoverPolicyProtocol]) -> FailoverPoliciesProtocol {
    return FailoverPoliciesData(failoverPolicies: failoverPolicies)
  }
}
