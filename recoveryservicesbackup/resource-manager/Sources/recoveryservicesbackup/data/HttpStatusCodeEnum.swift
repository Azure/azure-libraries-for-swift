// HttpStatusCode enumerates the values for http status code.

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
public enum HttpStatusCodeEnum: String, Codable
{
// Accepted specifies the accepted state for http status code.
    case Accepted = "Accepted"
// Ambiguous specifies the ambiguous state for http status code.
    case Ambiguous = "Ambiguous"
// BadGateway specifies the bad gateway state for http status code.
    case BadGateway = "BadGateway"
// BadRequest specifies the bad request state for http status code.
    case BadRequest = "BadRequest"
// Conflict specifies the conflict state for http status code.
    case Conflict = "Conflict"
// Continue specifies the continue state for http status code.
    case Continue = "Continue"
// Created specifies the created state for http status code.
    case Created = "Created"
// ExpectationFailed specifies the expectation failed state for http status code.
    case ExpectationFailed = "ExpectationFailed"
// Forbidden specifies the forbidden state for http status code.
    case Forbidden = "Forbidden"
// Found specifies the found state for http status code.
    case Found = "Found"
// GatewayTimeout specifies the gateway timeout state for http status code.
    case GatewayTimeout = "GatewayTimeout"
// Gone specifies the gone state for http status code.
    case Gone = "Gone"
// HttpVersionNotSupported specifies the http version not supported state for http status code.
    case HttpVersionNotSupported = "HttpVersionNotSupported"
// InternalServerError specifies the internal server error state for http status code.
    case InternalServerError = "InternalServerError"
// LengthRequired specifies the length required state for http status code.
    case LengthRequired = "LengthRequired"
// MethodNotAllowed specifies the method not allowed state for http status code.
    case MethodNotAllowed = "MethodNotAllowed"
// Moved specifies the moved state for http status code.
    case Moved = "Moved"
// MovedPermanently specifies the moved permanently state for http status code.
    case MovedPermanently = "MovedPermanently"
// MultipleChoices specifies the multiple choices state for http status code.
    case MultipleChoices = "MultipleChoices"
// NoContent specifies the no content state for http status code.
    case NoContent = "NoContent"
// NonAuthoritativeInformation specifies the non authoritative information state for http status code.
    case NonAuthoritativeInformation = "NonAuthoritativeInformation"
// NotAcceptable specifies the not acceptable state for http status code.
    case NotAcceptable = "NotAcceptable"
// NotFound specifies the not found state for http status code.
    case NotFound = "NotFound"
// NotImplemented specifies the not implemented state for http status code.
    case NotImplemented = "NotImplemented"
// NotModified specifies the not modified state for http status code.
    case NotModified = "NotModified"
// OK specifies the ok state for http status code.
    case OK = "OK"
// PartialContent specifies the partial content state for http status code.
    case PartialContent = "PartialContent"
// PaymentRequired specifies the payment required state for http status code.
    case PaymentRequired = "PaymentRequired"
// PreconditionFailed specifies the precondition failed state for http status code.
    case PreconditionFailed = "PreconditionFailed"
// ProxyAuthenticationRequired specifies the proxy authentication required state for http status code.
    case ProxyAuthenticationRequired = "ProxyAuthenticationRequired"
// Redirect specifies the redirect state for http status code.
    case Redirect = "Redirect"
// RedirectKeepVerb specifies the redirect keep verb state for http status code.
    case RedirectKeepVerb = "RedirectKeepVerb"
// RedirectMethod specifies the redirect method state for http status code.
    case RedirectMethod = "RedirectMethod"
// RequestedRangeNotSatisfiable specifies the requested range not satisfiable state for http status code.
    case RequestedRangeNotSatisfiable = "RequestedRangeNotSatisfiable"
// RequestEntityTooLarge specifies the request entity too large state for http status code.
    case RequestEntityTooLarge = "RequestEntityTooLarge"
// RequestTimeout specifies the request timeout state for http status code.
    case RequestTimeout = "RequestTimeout"
// RequestUriTooLong specifies the request uri too long state for http status code.
    case RequestUriTooLong = "RequestUriTooLong"
// ResetContent specifies the reset content state for http status code.
    case ResetContent = "ResetContent"
// SeeOther specifies the see other state for http status code.
    case SeeOther = "SeeOther"
// ServiceUnavailable specifies the service unavailable state for http status code.
    case ServiceUnavailable = "ServiceUnavailable"
// SwitchingProtocols specifies the switching protocols state for http status code.
    case SwitchingProtocols = "SwitchingProtocols"
// TemporaryRedirect specifies the temporary redirect state for http status code.
    case TemporaryRedirect = "TemporaryRedirect"
// Unauthorized specifies the unauthorized state for http status code.
    case Unauthorized = "Unauthorized"
// UnsupportedMediaType specifies the unsupported media type state for http status code.
    case UnsupportedMediaType = "UnsupportedMediaType"
// Unused specifies the unused state for http status code.
    case Unused = "Unused"
// UpgradeRequired specifies the upgrade required state for http status code.
    case UpgradeRequired = "UpgradeRequired"
// UseProxy specifies the use proxy state for http status code.
    case UseProxy = "UseProxy"
}
