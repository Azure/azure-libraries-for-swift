// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
import Foundation
internal struct AccessPolicyData : AccessPolicyProtocol {
    public var start: Date?
    public var expiry: Date?
    public var permission: String?

    enum CodingKeys: String, CodingKey {
        case start = "Start"
        case expiry = "Expiry"
        case permission = "Permission"
    }

  public init()  {
  }

  public init(from decoder: Decoder) throws {
    let container = try decoder.container(keyedBy: CodingKeys.self)
    if container.contains(.start) {
        start = try container.decode(Date.self, forKey: .start)
    }
    if container.contains(.expiry) {
        expiry = try container.decode(Date.self, forKey: .expiry)
    }
    if container.contains(.permission) {
        permission = try container.decode(String.self, forKey: .permission)
    }
  }

  public func encode(to encoder: Encoder) throws {
    var container = encoder.container(keyedBy: CodingKeys.self)
    if self.start != nil {try container.encode(start, forKey: .start)}
    if self.expiry != nil {try container.encode(expiry, forKey: .expiry)}
    if self.permission != nil {try container.encode(permission, forKey: .permission)}
  }
}

extension DataFactory {
  public static func createAccessPolicyProtocol() -> AccessPolicyProtocol {
    return AccessPolicyData()
  }
}
