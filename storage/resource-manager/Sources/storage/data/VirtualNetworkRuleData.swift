// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
import Foundation
internal struct VirtualNetworkRuleData : VirtualNetworkRuleProtocol {
    public var virtualNetworkResourceId: String
    public var action: Action?
    public var state: State?

    enum CodingKeys: String, CodingKey {
        case virtualNetworkResourceId = "id"
        case action = "action"
        case state = "state"
    }

  public init(virtualNetworkResourceId: String)  {
    self.virtualNetworkResourceId = virtualNetworkResourceId
  }

  public init(from decoder: Decoder) throws {
    let container = try decoder.container(keyedBy: CodingKeys.self)
    virtualNetworkResourceId = try container.decode(String.self, forKey: .virtualNetworkResourceId)
    if container.contains(.action) {
        action = try container.decode(Action?.self, forKey: .action)
    }
    if container.contains(.state) {
        state = try container.decode(State?.self, forKey: .state)
    }
  }

  public func encode(to encoder: Encoder) throws {
    var container = encoder.container(keyedBy: CodingKeys.self)
    try container.encode(virtualNetworkResourceId, forKey: .virtualNetworkResourceId)
    if self.action != nil {try container.encode(action, forKey: .action)}
    if self.state != nil {try container.encode(state, forKey: .state)}
  }
}

extension DataFactory {
  public static func createVirtualNetworkRuleProtocol(virtualNetworkResourceId: String) -> VirtualNetworkRuleProtocol {
    return VirtualNetworkRuleData(virtualNetworkResourceId: virtualNetworkResourceId)
  }
}
