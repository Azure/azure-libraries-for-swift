// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
import Foundation
internal struct CustomDomainData : CustomDomainProtocol {
    public var name: String
    public var useSubDomain: Bool?

    enum CodingKeys: String, CodingKey {
        case name = "name"
        case useSubDomain = "useSubDomain"
    }

  public init(name: String)  {
    self.name = name
  }

  public init(from decoder: Decoder) throws {
    let container = try decoder.container(keyedBy: CodingKeys.self)
    name = try container.decode(String.self, forKey: .name)
    if container.contains(.useSubDomain) {
        useSubDomain = try container.decode(Bool.self, forKey: .useSubDomain)
    }
  }

  public func encode(to encoder: Encoder) throws {
    var container = encoder.container(keyedBy: CodingKeys.self)
    try container.encode(name, forKey: .name)
    if self.useSubDomain != nil {try container.encode(useSubDomain, forKey: .useSubDomain)}
  }
}

extension DataFactory {
  public static func createCustomDomainProtocol(name: String) -> CustomDomainProtocol {
    return CustomDomainData(name: name)
  }
}
