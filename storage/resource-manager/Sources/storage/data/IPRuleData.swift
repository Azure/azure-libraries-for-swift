// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
import Foundation
import azureSwiftRuntime
internal struct IPRuleData : IPRuleProtocol {
    public var iPAddressOrRange: String
    public var action: ActionEnum?

        enum CodingKeys: String, CodingKey {case iPAddressOrRange = "value"
        case action = "action"
        }

  public init(iPAddressOrRange: String)  {
    self.iPAddressOrRange = iPAddressOrRange
  }

  public init(from decoder: Decoder) throws {
    let container = try decoder.container(keyedBy: CodingKeys.self)
      self.iPAddressOrRange = try container.decode(String.self, forKey: .iPAddressOrRange)
    if container.contains(.action) {
        self.action = try container.decode(ActionEnum?.self, forKey: .action)
    }
    if var pageDecoder = decoder as? PageDecoder  {
      if pageDecoder.isPagedData,
        let nextLinkName = pageDecoder.nextLinkName {
          pageDecoder.nextLink = try UnknownCodingKey.decodeStringForKey(decoder: decoder, keyForDecode: nextLinkName)
      }
    }
  }

  public func encode(to encoder: Encoder) throws {
    var container = encoder.container(keyedBy: CodingKeys.self)
    try container.encode(self.iPAddressOrRange, forKey: .iPAddressOrRange)
    if self.action != nil {try container.encode(self.action, forKey: .action)}
  }
}

extension DataFactory {
  public static func createIPRuleProtocol(iPAddressOrRange: String) -> IPRuleProtocol {
    return IPRuleData(iPAddressOrRange: iPAddressOrRange)
  }
}
