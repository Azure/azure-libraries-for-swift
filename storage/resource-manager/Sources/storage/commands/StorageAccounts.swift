// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

// StorageAccounts is the the Azure Storage Management API.
import Foundation
import azureSwiftRuntime
extension Commands {
public struct StorageAccounts {
    public static func CheckNameAvailability(subscriptionId: String, apiVersion: String, accountName: StorageAccountCheckNameAvailabilityParametersProtocol) -> StorageAccountsCheckNameAvailability {
        return CheckNameAvailabilityCommand(subscriptionId: subscriptionId, apiVersion: apiVersion, accountName: accountName)
    }
    public static func Create(resourceGroupName: String, accountName: String, subscriptionId: String, apiVersion: String, parameters: StorageAccountCreateParametersProtocol) -> StorageAccountsCreate {
        return CreateCommand(resourceGroupName: resourceGroupName, accountName: accountName, subscriptionId: subscriptionId, apiVersion: apiVersion, parameters: parameters)
    }
    public static func Delete(resourceGroupName: String, accountName: String, subscriptionId: String, apiVersion: String) -> StorageAccountsDelete {
        return DeleteCommand(resourceGroupName: resourceGroupName, accountName: accountName, subscriptionId: subscriptionId, apiVersion: apiVersion)
    }
    public static func GetProperties(resourceGroupName: String, accountName: String, subscriptionId: String, apiVersion: String) -> StorageAccountsGetProperties {
        return GetPropertiesCommand(resourceGroupName: resourceGroupName, accountName: accountName, subscriptionId: subscriptionId, apiVersion: apiVersion)
    }
    public static func List(subscriptionId: String, apiVersion: String) -> StorageAccountsList {
        return ListCommand(subscriptionId: subscriptionId, apiVersion: apiVersion)
    }
    public static func ListAccountSAS(resourceGroupName: String, accountName: String, subscriptionId: String, apiVersion: String, parameters: AccountSasParametersProtocol) -> StorageAccountsListAccountSAS {
        return ListAccountSASCommand(resourceGroupName: resourceGroupName, accountName: accountName, subscriptionId: subscriptionId, apiVersion: apiVersion, parameters: parameters)
    }
    public static func ListByResourceGroup(resourceGroupName: String, subscriptionId: String, apiVersion: String) -> StorageAccountsListByResourceGroup {
        return ListByResourceGroupCommand(resourceGroupName: resourceGroupName, subscriptionId: subscriptionId, apiVersion: apiVersion)
    }
    public static func ListKeys(resourceGroupName: String, accountName: String, subscriptionId: String, apiVersion: String) -> StorageAccountsListKeys {
        return ListKeysCommand(resourceGroupName: resourceGroupName, accountName: accountName, subscriptionId: subscriptionId, apiVersion: apiVersion)
    }
    public static func ListServiceSAS(resourceGroupName: String, accountName: String, subscriptionId: String, apiVersion: String, parameters: ServiceSasParametersProtocol) -> StorageAccountsListServiceSAS {
        return ListServiceSASCommand(resourceGroupName: resourceGroupName, accountName: accountName, subscriptionId: subscriptionId, apiVersion: apiVersion, parameters: parameters)
    }
    public static func RegenerateKey(resourceGroupName: String, accountName: String, subscriptionId: String, apiVersion: String, regenerateKey: StorageAccountRegenerateKeyParametersProtocol) -> StorageAccountsRegenerateKey {
        return RegenerateKeyCommand(resourceGroupName: resourceGroupName, accountName: accountName, subscriptionId: subscriptionId, apiVersion: apiVersion, regenerateKey: regenerateKey)
    }
    public static func Update(resourceGroupName: String, accountName: String, subscriptionId: String, apiVersion: String, parameters: StorageAccountUpdateParametersProtocol) -> StorageAccountsUpdate {
        return UpdateCommand(resourceGroupName: resourceGroupName, accountName: accountName, subscriptionId: subscriptionId, apiVersion: apiVersion, parameters: parameters)
    }
}
}
