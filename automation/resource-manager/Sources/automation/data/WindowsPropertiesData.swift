// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
import Foundation
import azureSwiftRuntime
internal struct WindowsPropertiesData : WindowsPropertiesProtocol {
    public var includedUpdateClassifications: WindowsUpdateClassesEnum?
    public var excludedKbNumbers: [String]?

        enum CodingKeys: String, CodingKey {case includedUpdateClassifications = "includedUpdateClassifications"
        case excludedKbNumbers = "excludedKbNumbers"
        }

  public init()  {
  }

  public init(from decoder: Decoder) throws {
    let container = try decoder.container(keyedBy: CodingKeys.self)
      if container.contains(.includedUpdateClassifications) {
        self.includedUpdateClassifications = try container.decode(WindowsUpdateClassesEnum?.self, forKey: .includedUpdateClassifications)
    }
    if container.contains(.excludedKbNumbers) {
        self.excludedKbNumbers = try container.decode([String]?.self, forKey: .excludedKbNumbers)
    }
    if var pageDecoder = decoder as? PageDecoder  {
      if pageDecoder.isPagedData,
        let nextLinkName = pageDecoder.nextLinkName {
          pageDecoder.nextLink = try UnknownCodingKey.decodeStringForKey(decoder: decoder, keyForDecode: nextLinkName)
      }
    }
  }

  public func encode(to encoder: Encoder) throws {
    var container = encoder.container(keyedBy: CodingKeys.self)
    if self.includedUpdateClassifications != nil {try container.encode(self.includedUpdateClassifications, forKey: .includedUpdateClassifications)}
    if self.excludedKbNumbers != nil {try container.encode(self.excludedKbNumbers as! [String]?, forKey: .excludedKbNumbers)}
  }
}

extension DataFactory {
  public static func createWindowsPropertiesProtocol() -> WindowsPropertiesProtocol {
    return WindowsPropertiesData()
  }
}
