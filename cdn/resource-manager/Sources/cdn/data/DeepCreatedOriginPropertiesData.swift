// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
import Foundation
import azureSwiftRuntime
internal struct DeepCreatedOriginPropertiesData : DeepCreatedOriginPropertiesProtocol {
    public var hostName: String
    public var httpPort: Int32?
    public var httpsPort: Int32?

        enum CodingKeys: String, CodingKey {case hostName = "hostName"
        case httpPort = "httpPort"
        case httpsPort = "httpsPort"
        }

  public init(hostName: String)  {
    self.hostName = hostName
  }

  public init(from decoder: Decoder) throws {
    let container = try decoder.container(keyedBy: CodingKeys.self)
      self.hostName = try container.decode(String.self, forKey: .hostName)
    if container.contains(.httpPort) {
        self.httpPort = try container.decode(Int32?.self, forKey: .httpPort)
    }
    if container.contains(.httpsPort) {
        self.httpsPort = try container.decode(Int32?.self, forKey: .httpsPort)
    }
    if var pageDecoder = decoder as? PageDecoder  {
      if pageDecoder.isPagedData,
        let nextLinkName = pageDecoder.nextLinkName {
          pageDecoder.nextLink = try UnknownCodingKey.decodeStringForKey(decoder: decoder, keyForDecode: nextLinkName)
      }
    }
  }

  public func encode(to encoder: Encoder) throws {
    var container = encoder.container(keyedBy: CodingKeys.self)
    try container.encode(self.hostName, forKey: .hostName)
    if self.httpPort != nil {try container.encode(self.httpPort, forKey: .httpPort)}
    if self.httpsPort != nil {try container.encode(self.httpsPort, forKey: .httpsPort)}
  }
}

extension DataFactory {
  public static func createDeepCreatedOriginPropertiesProtocol(hostName: String) -> DeepCreatedOriginPropertiesProtocol {
    return DeepCreatedOriginPropertiesData(hostName: hostName)
  }
}
