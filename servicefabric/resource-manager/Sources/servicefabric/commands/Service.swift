// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.

// Service is the azure Service Fabric Resource Provider API Client
import Foundation
import azureSwiftRuntime
extension Commands {
public struct Service {
    public static func Delete(subscriptionId: String, resourceGroupName: String, clusterName: String, applicationName: String, serviceName: String) -> ServiceDelete {
        return DeleteCommand(subscriptionId: subscriptionId, resourceGroupName: resourceGroupName, clusterName: clusterName, applicationName: applicationName, serviceName: serviceName)
    }
    public static func Get(subscriptionId: String, resourceGroupName: String, clusterName: String, applicationName: String, serviceName: String) -> ServiceGet {
        return GetCommand(subscriptionId: subscriptionId, resourceGroupName: resourceGroupName, clusterName: clusterName, applicationName: applicationName, serviceName: serviceName)
    }
    public static func List(subscriptionId: String, resourceGroupName: String, clusterName: String, applicationName: String) -> ServiceList {
        return ListCommand(subscriptionId: subscriptionId, resourceGroupName: resourceGroupName, clusterName: clusterName, applicationName: applicationName)
    }
    public static func Patch(subscriptionId: String, resourceGroupName: String, clusterName: String, applicationName: String, serviceName: String, parameters: ServiceResourceUpdateProtocol) -> ServicePatch {
        return PatchCommand(subscriptionId: subscriptionId, resourceGroupName: resourceGroupName, clusterName: clusterName, applicationName: applicationName, serviceName: serviceName, parameters: parameters)
    }
    public static func Put(subscriptionId: String, resourceGroupName: String, clusterName: String, applicationName: String, serviceName: String, parameters: ServiceResourceProtocol) -> ServicePut {
        return PutCommand(subscriptionId: subscriptionId, resourceGroupName: resourceGroupName, clusterName: clusterName, applicationName: applicationName, serviceName: serviceName, parameters: parameters)
    }
}
}
