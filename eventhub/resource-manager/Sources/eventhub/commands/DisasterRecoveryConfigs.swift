// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.

// DisasterRecoveryConfigs is the azure Event Hubs client
import Foundation
import azureSwiftRuntime
extension Commands {
public struct DisasterRecoveryConfigs {
    public static func BreakPairing(resourceGroupName: String, namespaceName: String, alias: String, subscriptionId: String) -> DisasterRecoveryConfigsBreakPairing {
        return BreakPairingCommand(resourceGroupName: resourceGroupName, namespaceName: namespaceName, alias: alias, subscriptionId: subscriptionId)
    }
    public static func CheckNameAvailability(subscriptionId: String, resourceGroupName: String, namespaceName: String, parameters: CheckNameAvailabilityParameterProtocol) -> DisasterRecoveryConfigsCheckNameAvailability {
        return CheckNameAvailabilityCommand(subscriptionId: subscriptionId, resourceGroupName: resourceGroupName, namespaceName: namespaceName, parameters: parameters)
    }
    public static func CreateOrUpdate(resourceGroupName: String, namespaceName: String, alias: String, subscriptionId: String, parameters: ArmDisasterRecoveryProtocol) -> DisasterRecoveryConfigsCreateOrUpdate {
        return CreateOrUpdateCommand(resourceGroupName: resourceGroupName, namespaceName: namespaceName, alias: alias, subscriptionId: subscriptionId, parameters: parameters)
    }
    public static func Delete(resourceGroupName: String, namespaceName: String, alias: String, subscriptionId: String) -> DisasterRecoveryConfigsDelete {
        return DeleteCommand(resourceGroupName: resourceGroupName, namespaceName: namespaceName, alias: alias, subscriptionId: subscriptionId)
    }
    public static func FailOver(resourceGroupName: String, namespaceName: String, alias: String, subscriptionId: String) -> DisasterRecoveryConfigsFailOver {
        return FailOverCommand(resourceGroupName: resourceGroupName, namespaceName: namespaceName, alias: alias, subscriptionId: subscriptionId)
    }
    public static func Get(resourceGroupName: String, namespaceName: String, alias: String, subscriptionId: String) -> DisasterRecoveryConfigsGet {
        return GetCommand(resourceGroupName: resourceGroupName, namespaceName: namespaceName, alias: alias, subscriptionId: subscriptionId)
    }
    public static func GetAuthorizationRule(resourceGroupName: String, namespaceName: String, alias: String, authorizationRuleName: String, subscriptionId: String) -> DisasterRecoveryConfigsGetAuthorizationRule {
        return GetAuthorizationRuleCommand(resourceGroupName: resourceGroupName, namespaceName: namespaceName, alias: alias, authorizationRuleName: authorizationRuleName, subscriptionId: subscriptionId)
    }
    public static func List(resourceGroupName: String, namespaceName: String, subscriptionId: String) -> DisasterRecoveryConfigsList {
        return ListCommand(resourceGroupName: resourceGroupName, namespaceName: namespaceName, subscriptionId: subscriptionId)
    }
    public static func ListAuthorizationRules(resourceGroupName: String, namespaceName: String, alias: String, subscriptionId: String) -> DisasterRecoveryConfigsListAuthorizationRules {
        return ListAuthorizationRulesCommand(resourceGroupName: resourceGroupName, namespaceName: namespaceName, alias: alias, subscriptionId: subscriptionId)
    }
    public static func ListKeys(resourceGroupName: String, namespaceName: String, alias: String, authorizationRuleName: String, subscriptionId: String) -> DisasterRecoveryConfigsListKeys {
        return ListKeysCommand(resourceGroupName: resourceGroupName, namespaceName: namespaceName, alias: alias, authorizationRuleName: authorizationRuleName, subscriptionId: subscriptionId)
    }
}
}
