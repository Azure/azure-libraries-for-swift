// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
import Foundation
import azureSwiftRuntime
internal struct PoolEndpointConfigurationData : PoolEndpointConfigurationProtocol {
    public var inboundNatPools: [InboundNatPoolProtocol]

        enum CodingKeys: String, CodingKey {case inboundNatPools = "inboundNatPools"
        }

  public init(inboundNatPools: [InboundNatPoolProtocol])  {
    self.inboundNatPools = inboundNatPools
  }

  public init(from decoder: Decoder) throws {
    let container = try decoder.container(keyedBy: CodingKeys.self)
      self.inboundNatPools = try container.decode([InboundNatPoolData].self, forKey: .inboundNatPools)
    if var pageDecoder = decoder as? PageDecoder  {
      if pageDecoder.isPagedData,
        let nextLinkName = pageDecoder.nextLinkName {
          pageDecoder.nextLink = try UnknownCodingKey.decodeStringForKey(decoder: decoder, keyForDecode: nextLinkName)
      }
    }
  }

  public func encode(to encoder: Encoder) throws {
    var container = encoder.container(keyedBy: CodingKeys.self)
    try container.encode(self.inboundNatPools as! [InboundNatPoolData], forKey: .inboundNatPools)
  }
}

extension DataFactory {
  public static func createPoolEndpointConfigurationProtocol(inboundNatPools: [InboundNatPoolProtocol]) -> PoolEndpointConfigurationProtocol {
    return PoolEndpointConfigurationData(inboundNatPools: inboundNatPools)
  }
}
