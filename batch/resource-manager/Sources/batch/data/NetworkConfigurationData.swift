// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
import Foundation
import azureSwiftRuntime
internal struct NetworkConfigurationData : NetworkConfigurationProtocol {
    public var subnetId: String?
    public var endpointConfiguration: PoolEndpointConfigurationProtocol?

        enum CodingKeys: String, CodingKey {case subnetId = "subnetId"
        case endpointConfiguration = "endpointConfiguration"
        }

  public init()  {
  }

  public init(from decoder: Decoder) throws {
    let container = try decoder.container(keyedBy: CodingKeys.self)
      if container.contains(.subnetId) {
        self.subnetId = try container.decode(String?.self, forKey: .subnetId)
    }
    if container.contains(.endpointConfiguration) {
        self.endpointConfiguration = try container.decode(PoolEndpointConfigurationData?.self, forKey: .endpointConfiguration)
    }
    if var pageDecoder = decoder as? PageDecoder  {
      if pageDecoder.isPagedData,
        let nextLinkName = pageDecoder.nextLinkName {
          pageDecoder.nextLink = try UnknownCodingKey.decodeStringForKey(decoder: decoder, keyForDecode: nextLinkName)
      }
    }
  }

  public func encode(to encoder: Encoder) throws {
    var container = encoder.container(keyedBy: CodingKeys.self)
    if self.subnetId != nil {try container.encode(self.subnetId, forKey: .subnetId)}
    if self.endpointConfiguration != nil {try container.encode(self.endpointConfiguration as! PoolEndpointConfigurationData?, forKey: .endpointConfiguration)}
  }
}

extension DataFactory {
  public static func createNetworkConfigurationProtocol() -> NetworkConfigurationProtocol {
    return NetworkConfigurationData()
  }
}
