// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.

// Certificate is the client for the Certificate methods of the BatchManagementClient service.
import Foundation
import azureSwiftRuntime
extension Commands {
public struct Certificate {
    public static func CancelDeletion(resourceGroupName: String, accountName: String, certificateName: String, subscriptionId: String) -> CertificateCancelDeletion {
        return CancelDeletionCommand(resourceGroupName: resourceGroupName, accountName: accountName, certificateName: certificateName, subscriptionId: subscriptionId)
    }
    public static func Create(resourceGroupName: String, accountName: String, certificateName: String, subscriptionId: String, parameters: CertificateCreateOrUpdateParametersProtocol) -> CertificateCreate {
        return CreateCommand(resourceGroupName: resourceGroupName, accountName: accountName, certificateName: certificateName, subscriptionId: subscriptionId, parameters: parameters)
    }
    public static func Delete(resourceGroupName: String, accountName: String, certificateName: String, subscriptionId: String) -> CertificateDelete {
        return DeleteCommand(resourceGroupName: resourceGroupName, accountName: accountName, certificateName: certificateName, subscriptionId: subscriptionId)
    }
    public static func Get(resourceGroupName: String, accountName: String, certificateName: String, subscriptionId: String) -> CertificateGet {
        return GetCommand(resourceGroupName: resourceGroupName, accountName: accountName, certificateName: certificateName, subscriptionId: subscriptionId)
    }
    public static func ListByBatchAccount(resourceGroupName: String, accountName: String, subscriptionId: String) -> CertificateListByBatchAccount {
        return ListByBatchAccountCommand(resourceGroupName: resourceGroupName, accountName: accountName, subscriptionId: subscriptionId)
    }
    public static func Update(resourceGroupName: String, accountName: String, certificateName: String, subscriptionId: String, parameters: CertificateCreateOrUpdateParametersProtocol) -> CertificateUpdate {
        return UpdateCommand(resourceGroupName: resourceGroupName, accountName: accountName, certificateName: certificateName, subscriptionId: subscriptionId, parameters: parameters)
    }
}
}
