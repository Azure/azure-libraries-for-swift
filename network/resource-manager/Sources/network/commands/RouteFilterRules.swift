// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.

// RouteFilterRules is the network Client
import Foundation
import azureSwiftRuntime
extension Commands {
public struct RouteFilterRules {
    public static func CreateOrUpdate(resourceGroupName: String, routeFilterName: String, ruleName: String, subscriptionId: String, routeFilterRuleParameters: RouteFilterRuleProtocol) -> RouteFilterRulesCreateOrUpdate {
        return CreateOrUpdateCommand(resourceGroupName: resourceGroupName, routeFilterName: routeFilterName, ruleName: ruleName, subscriptionId: subscriptionId, routeFilterRuleParameters: routeFilterRuleParameters)
    }
    public static func Delete(resourceGroupName: String, routeFilterName: String, ruleName: String, subscriptionId: String) -> RouteFilterRulesDelete {
        return DeleteCommand(resourceGroupName: resourceGroupName, routeFilterName: routeFilterName, ruleName: ruleName, subscriptionId: subscriptionId)
    }
    public static func Get(resourceGroupName: String, routeFilterName: String, ruleName: String, subscriptionId: String) -> RouteFilterRulesGet {
        return GetCommand(resourceGroupName: resourceGroupName, routeFilterName: routeFilterName, ruleName: ruleName, subscriptionId: subscriptionId)
    }
    public static func ListByRouteFilter(resourceGroupName: String, routeFilterName: String, subscriptionId: String) -> RouteFilterRulesListByRouteFilter {
        return ListByRouteFilterCommand(resourceGroupName: resourceGroupName, routeFilterName: routeFilterName, subscriptionId: subscriptionId)
    }
    public static func Update(resourceGroupName: String, routeFilterName: String, ruleName: String, subscriptionId: String, routeFilterRuleParameters: PatchRouteFilterRuleProtocol) -> RouteFilterRulesUpdate {
        return UpdateCommand(resourceGroupName: resourceGroupName, routeFilterName: routeFilterName, ruleName: ruleName, subscriptionId: subscriptionId, routeFilterRuleParameters: routeFilterRuleParameters)
    }
}
}
