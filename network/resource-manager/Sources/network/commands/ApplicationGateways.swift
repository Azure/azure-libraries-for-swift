// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.

// ApplicationGateways is the network Client
import Foundation
import azureSwiftRuntime
extension Commands {
public struct ApplicationGateways {
    public static func BackendHealth(resourceGroupName: String, applicationGatewayName: String, subscriptionId: String) -> ApplicationGatewaysBackendHealth {
        return BackendHealthCommand(resourceGroupName: resourceGroupName, applicationGatewayName: applicationGatewayName, subscriptionId: subscriptionId)
    }
    public static func CreateOrUpdate(resourceGroupName: String, applicationGatewayName: String, subscriptionId: String, parameters: ApplicationGatewayProtocol) -> ApplicationGatewaysCreateOrUpdate {
        return CreateOrUpdateCommand(resourceGroupName: resourceGroupName, applicationGatewayName: applicationGatewayName, subscriptionId: subscriptionId, parameters: parameters)
    }
    public static func Delete(resourceGroupName: String, applicationGatewayName: String, subscriptionId: String) -> ApplicationGatewaysDelete {
        return DeleteCommand(resourceGroupName: resourceGroupName, applicationGatewayName: applicationGatewayName, subscriptionId: subscriptionId)
    }
    public static func Get(resourceGroupName: String, applicationGatewayName: String, subscriptionId: String) -> ApplicationGatewaysGet {
        return GetCommand(resourceGroupName: resourceGroupName, applicationGatewayName: applicationGatewayName, subscriptionId: subscriptionId)
    }
    public static func GetSslPredefinedPolicy(subscriptionId: String, predefinedPolicyName: String) -> ApplicationGatewaysGetSslPredefinedPolicy {
        return GetSslPredefinedPolicyCommand(subscriptionId: subscriptionId, predefinedPolicyName: predefinedPolicyName)
    }
    public static func List(resourceGroupName: String, subscriptionId: String) -> ApplicationGatewaysList {
        return ListCommand(resourceGroupName: resourceGroupName, subscriptionId: subscriptionId)
    }
    public static func ListAll(subscriptionId: String) -> ApplicationGatewaysListAll {
        return ListAllCommand(subscriptionId: subscriptionId)
    }
    public static func ListAvailableSslOptions(subscriptionId: String) -> ApplicationGatewaysListAvailableSslOptions {
        return ListAvailableSslOptionsCommand(subscriptionId: subscriptionId)
    }
    public static func ListAvailableSslPredefinedPolicies(subscriptionId: String) -> ApplicationGatewaysListAvailableSslPredefinedPolicies {
        return ListAvailableSslPredefinedPoliciesCommand(subscriptionId: subscriptionId)
    }
    public static func ListAvailableWafRuleSets(subscriptionId: String) -> ApplicationGatewaysListAvailableWafRuleSets {
        return ListAvailableWafRuleSetsCommand(subscriptionId: subscriptionId)
    }
    public static func Start(resourceGroupName: String, applicationGatewayName: String, subscriptionId: String) -> ApplicationGatewaysStart {
        return StartCommand(resourceGroupName: resourceGroupName, applicationGatewayName: applicationGatewayName, subscriptionId: subscriptionId)
    }
    public static func Stop(resourceGroupName: String, applicationGatewayName: String, subscriptionId: String) -> ApplicationGatewaysStop {
        return StopCommand(resourceGroupName: resourceGroupName, applicationGatewayName: applicationGatewayName, subscriptionId: subscriptionId)
    }
    public static func UpdateTags(resourceGroupName: String, applicationGatewayName: String, subscriptionId: String, parameters: TagsObjectProtocol) -> ApplicationGatewaysUpdateTags {
        return UpdateTagsCommand(resourceGroupName: resourceGroupName, applicationGatewayName: applicationGatewayName, subscriptionId: subscriptionId, parameters: parameters)
    }
}
}
