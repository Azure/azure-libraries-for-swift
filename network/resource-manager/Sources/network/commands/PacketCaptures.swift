// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.

// PacketCaptures is the network Client
import Foundation
import azureSwiftRuntime
extension Commands {
public struct PacketCaptures {
    public static func Create(resourceGroupName: String, networkWatcherName: String, packetCaptureName: String, subscriptionId: String, parameters: PacketCaptureProtocol) -> PacketCapturesCreate {
        return CreateCommand(resourceGroupName: resourceGroupName, networkWatcherName: networkWatcherName, packetCaptureName: packetCaptureName, subscriptionId: subscriptionId, parameters: parameters)
    }
    public static func Delete(resourceGroupName: String, networkWatcherName: String, packetCaptureName: String, subscriptionId: String) -> PacketCapturesDelete {
        return DeleteCommand(resourceGroupName: resourceGroupName, networkWatcherName: networkWatcherName, packetCaptureName: packetCaptureName, subscriptionId: subscriptionId)
    }
    public static func Get(resourceGroupName: String, networkWatcherName: String, packetCaptureName: String, subscriptionId: String) -> PacketCapturesGet {
        return GetCommand(resourceGroupName: resourceGroupName, networkWatcherName: networkWatcherName, packetCaptureName: packetCaptureName, subscriptionId: subscriptionId)
    }
    public static func GetStatus(resourceGroupName: String, networkWatcherName: String, packetCaptureName: String, subscriptionId: String) -> PacketCapturesGetStatus {
        return GetStatusCommand(resourceGroupName: resourceGroupName, networkWatcherName: networkWatcherName, packetCaptureName: packetCaptureName, subscriptionId: subscriptionId)
    }
    public static func List(resourceGroupName: String, networkWatcherName: String, subscriptionId: String) -> PacketCapturesList {
        return ListCommand(resourceGroupName: resourceGroupName, networkWatcherName: networkWatcherName, subscriptionId: subscriptionId)
    }
    public static func Stop(resourceGroupName: String, networkWatcherName: String, packetCaptureName: String, subscriptionId: String) -> PacketCapturesStop {
        return StopCommand(resourceGroupName: resourceGroupName, networkWatcherName: networkWatcherName, packetCaptureName: packetCaptureName, subscriptionId: subscriptionId)
    }
}
}
