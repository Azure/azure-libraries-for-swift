// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
import Foundation
import azureSwiftRuntime
internal struct TroubleshootingPropertiesData : TroubleshootingPropertiesProtocol {
    public var storageId: String
    public var storagePath: String

        enum CodingKeys: String, CodingKey {case storageId = "storageId"
        case storagePath = "storagePath"
        }

  public init(storageId: String, storagePath: String)  {
    self.storageId = storageId
    self.storagePath = storagePath
  }

  public init(from decoder: Decoder) throws {
    let container = try decoder.container(keyedBy: CodingKeys.self)
      self.storageId = try container.decode(String.self, forKey: .storageId)
    self.storagePath = try container.decode(String.self, forKey: .storagePath)
    if var pageDecoder = decoder as? PageDecoder  {
      if pageDecoder.isPagedData,
        let nextLinkName = pageDecoder.nextLinkName {
          pageDecoder.nextLink = try UnknownCodingKey.decodeStringForKey(decoder: decoder, keyForDecode: nextLinkName)
      }
    }
  }

  public func encode(to encoder: Encoder) throws {
    var container = encoder.container(keyedBy: CodingKeys.self)
    try container.encode(self.storageId, forKey: .storageId)
    try container.encode(self.storagePath, forKey: .storagePath)
  }
}

extension DataFactory {
  public static func createTroubleshootingPropertiesProtocol(storageId: String, storagePath: String) -> TroubleshootingPropertiesProtocol {
    return TroubleshootingPropertiesData(storageId: storageId, storagePath: storagePath)
  }
}
