// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.

// Groups is the the Graph RBAC Management Client
import Foundation
import azureSwiftRuntime
extension Commands {
public struct Groups {
    public static func AddMember(groupObjectId: String, tenantID: String, parameters: GroupAddMemberParametersProtocol) -> GroupsAddMember {
        return AddMemberCommand(groupObjectId: groupObjectId, tenantID: tenantID, parameters: parameters)
    }
    public static func Create(tenantID: String, parameters: GroupCreateParametersProtocol) -> GroupsCreate {
        return CreateCommand(tenantID: tenantID, parameters: parameters)
    }
    public static func Delete(objectId: String, tenantID: String) -> GroupsDelete {
        return DeleteCommand(objectId: objectId, tenantID: tenantID)
    }
    public static func Get(objectId: String, tenantID: String) -> GroupsGet {
        return GetCommand(objectId: objectId, tenantID: tenantID)
    }
    public static func GetGroupMembers(objectId: String, tenantID: String) -> GroupsGetGroupMembers {
        return GetGroupMembersCommand(objectId: objectId, tenantID: tenantID)
    }
    public static func GetGroupMembersNext(_nextLink: String, tenantID: String) -> GroupsGetGroupMembersNext {
        return GetGroupMembersNextCommand(_nextLink: _nextLink, tenantID: tenantID)
    }
    public static func GetMemberGroups(objectId: String, tenantID: String, parameters: GroupGetMemberGroupsParametersProtocol) -> GroupsGetMemberGroups {
        return GetMemberGroupsCommand(objectId: objectId, tenantID: tenantID, parameters: parameters)
    }
    public static func IsMemberOf(tenantID: String, parameters: CheckGroupMembershipParametersProtocol) -> GroupsIsMemberOf {
        return IsMemberOfCommand(tenantID: tenantID, parameters: parameters)
    }
    public static func List(tenantID: String) -> GroupsList {
        return ListCommand(tenantID: tenantID)
    }
    public static func ListNext(_nextLink: String, tenantID: String) -> GroupsListNext {
        return ListNextCommand(_nextLink: _nextLink, tenantID: tenantID)
    }
    public static func RemoveMember(groupObjectId: String, memberObjectId: String, tenantID: String) -> GroupsRemoveMember {
        return RemoveMemberCommand(groupObjectId: groupObjectId, memberObjectId: memberObjectId, tenantID: tenantID)
    }
}
}
