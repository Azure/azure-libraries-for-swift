// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
import Foundation
// SitePropertiesProtocol is site resource specific properties
public protocol SitePropertiesProtocol : Codable {
     var state: String? { get set }
     var hostNames: [String]? { get set }
     var repositorySiteName: String? { get set }
     var usageState: UsageStateEnum? { get set }
     var enabled: Bool? { get set }
     var enabledHostNames: [String]? { get set }
     var availabilityState: SiteAvailabilityStateEnum? { get set }
     var hostNameSslStates: [HostNameSslStateProtocol?]? { get set }
     var serverFarmId: String? { get set }
     var reserved: Bool? { get set }
     var lastModifiedTimeUtc: Date? { get set }
     var siteConfig: SiteConfigProtocol? { get set }
     var trafficManagerHostNames: [String]? { get set }
     var scmSiteAlsoStopped: Bool? { get set }
     var targetSwapSlot: String? { get set }
     var hostingEnvironmentProfile: HostingEnvironmentProfileProtocol? { get set }
     var clientAffinityEnabled: Bool? { get set }
     var clientCertEnabled: Bool? { get set }
     var hostNamesDisabled: Bool? { get set }
     var outboundIpAddresses: String? { get set }
     var possibleOutboundIpAddresses: String? { get set }
     var containerSize: Int32? { get set }
     var dailyMemoryTimeQuota: Int32? { get set }
     var suspendedTill: Date? { get set }
     var maxNumberOfWorkers: Int32? { get set }
     var cloningInfo: CloningInfoProtocol? { get set }
     var snapshotInfo: SnapshotRecoveryRequestProtocol? { get set }
     var resourceGroup: String? { get set }
     var isDefaultContainer: Bool? { get set }
     var defaultHostName: String? { get set }
     var slotSwapStatus: SlotSwapStatusProtocol? { get set }
     var httpsOnly: Bool? { get set }
}
