// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
import Foundation
// AppServiceEnvironmentProtocol is description of an App Service Environment.
public protocol AppServiceEnvironmentProtocol : Codable {
     var name: String { get set }
     var location: String { get set }
     var provisioningState: ProvisioningStateEnum? { get set }
     var status: HostingEnvironmentStatusEnum? { get set }
     var vnetName: String? { get set }
     var vnetResourceGroupName: String? { get set }
     var vnetSubnetName: String? { get set }
     var virtualNetwork: VirtualNetworkProfileProtocol { get set }
     var internalLoadBalancingMode: InternalLoadBalancingModeEnum? { get set }
     var multiSize: String? { get set }
     var multiRoleCount: Int32? { get set }
     var workerPools: [WorkerPoolProtocol] { get set }
     var ipsslAddressCount: Int32? { get set }
     var databaseEdition: String? { get set }
     var databaseServiceObjective: String? { get set }
     var upgradeDomains: Int32? { get set }
     var subscriptionId: String? { get set }
     var dnsSuffix: String? { get set }
     var lastAction: String? { get set }
     var lastActionResult: String? { get set }
     var allowedMultiSizes: String? { get set }
     var allowedWorkerSizes: String? { get set }
     var maximumNumberOfMachines: Int32? { get set }
     var vipMappings: [VirtualIPMappingProtocol?]? { get set }
     var environmentCapacities: [StampCapacityProtocol?]? { get set }
     var networkAccessControlList: [NetworkAccessControlEntryProtocol?]? { get set }
     var environmentIsHealthy: Bool? { get set }
     var environmentStatus: String? { get set }
     var resourceGroup: String? { get set }
     var frontEndScaleFactor: Int32? { get set }
     var defaultFrontEndScaleFactor: Int32? { get set }
     var apiManagementAccountId: String? { get set }
     var suspended: Bool? { get set }
     var dynamicCacheEnabled: Bool? { get set }
     var clusterSettings: [NameValuePairProtocol?]? { get set }
     var userWhitelistedIpRanges: [String]? { get set }
}
