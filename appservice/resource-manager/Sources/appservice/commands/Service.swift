// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.

// ManagementClient is the webSite Management Client
import Foundation
import azureSwiftRuntime
extension Commands {
public struct Service {
    public static func CheckNameAvailability(subscriptionId: String, request: ResourceNameAvailabilityRequestProtocol) -> ServiceCheckNameAvailability {
        return CheckNameAvailabilityCommand(subscriptionId: subscriptionId, request: request)
    }
    public static func GetPublishingUser() -> ServiceGetPublishingUser {
        return GetPublishingUserCommand()
    }
    public static func GetSourceControl(sourceControlType: String) -> ServiceGetSourceControl {
        return GetSourceControlCommand(sourceControlType: sourceControlType)
    }
    public static func GetSubscriptionDeploymentLocations(subscriptionId: String) -> ServiceGetSubscriptionDeploymentLocations {
        return GetSubscriptionDeploymentLocationsCommand(subscriptionId: subscriptionId)
    }
    public static func ListGeoRegions(subscriptionId: String) -> ServiceListGeoRegions {
        return ListGeoRegionsCommand(subscriptionId: subscriptionId)
    }
    public static func ListPremierAddOnOffers(subscriptionId: String) -> ServiceListPremierAddOnOffers {
        return ListPremierAddOnOffersCommand(subscriptionId: subscriptionId)
    }
    public static func ListSiteIdentifiersAssignedToHostName(subscriptionId: String, nameIdentifier: NameIdentifierProtocol) -> ServiceListSiteIdentifiersAssignedToHostName {
        return ListSiteIdentifiersAssignedToHostNameCommand(subscriptionId: subscriptionId, nameIdentifier: nameIdentifier)
    }
    public static func ListSkus(subscriptionId: String) -> ServiceListSkus {
        return ListSkusCommand(subscriptionId: subscriptionId)
    }
    public static func ListSourceControls() -> ServiceListSourceControls {
        return ListSourceControlsCommand()
    }
    public static func Move(resourceGroupName: String, subscriptionId: String, moveResourceEnvelope: CsmMoveResourceEnvelopeProtocol) -> ServiceMove {
        return MoveCommand(resourceGroupName: resourceGroupName, subscriptionId: subscriptionId, moveResourceEnvelope: moveResourceEnvelope)
    }
    public static func UpdatePublishingUser(userDetails: UserProtocol) -> ServiceUpdatePublishingUser {
        return UpdatePublishingUserCommand(userDetails: userDetails)
    }
    public static func UpdateSourceControl(sourceControlType: String, requestMessage: SourceControlProtocol) -> ServiceUpdateSourceControl {
        return UpdateSourceControlCommand(sourceControlType: sourceControlType, requestMessage: requestMessage)
    }
    public static func Validate(resourceGroupName: String, subscriptionId: String, validateRequest: ValidateRequestProtocol) -> ServiceValidate {
        return ValidateCommand(resourceGroupName: resourceGroupName, subscriptionId: subscriptionId, validateRequest: validateRequest)
    }
    public static func ValidateMove(resourceGroupName: String, subscriptionId: String, moveResourceEnvelope: CsmMoveResourceEnvelopeProtocol) -> ServiceValidateMove {
        return ValidateMoveCommand(resourceGroupName: resourceGroupName, subscriptionId: subscriptionId, moveResourceEnvelope: moveResourceEnvelope)
    }
    public static func VerifyHostingEnvironmentVnet(subscriptionId: String, parameters: VnetParametersProtocol) -> ServiceVerifyHostingEnvironmentVnet {
        return VerifyHostingEnvironmentVnetCommand(subscriptionId: subscriptionId, parameters: parameters)
    }
}
}
