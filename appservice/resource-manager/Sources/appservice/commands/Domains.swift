// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.

// Domains is the webSite Management Client
import Foundation
import azureSwiftRuntime
extension Commands {
public struct Domains {
    public static func CheckAvailability(subscriptionId: String, identifier: NameIdentifierProtocol) -> DomainsCheckAvailability {
        return CheckAvailabilityCommand(subscriptionId: subscriptionId, identifier: identifier)
    }
    public static func CreateOrUpdate(resourceGroupName: String, domainName: String, subscriptionId: String, domain: DomainProtocol) -> DomainsCreateOrUpdate {
        return CreateOrUpdateCommand(resourceGroupName: resourceGroupName, domainName: domainName, subscriptionId: subscriptionId, domain: domain)
    }
    public static func CreateOrUpdateOwnershipIdentifier(resourceGroupName: String, domainName: String, name: String, subscriptionId: String, domainOwnershipIdentifier: DomainOwnershipIdentifierProtocol) -> DomainsCreateOrUpdateOwnershipIdentifier {
        return CreateOrUpdateOwnershipIdentifierCommand(resourceGroupName: resourceGroupName, domainName: domainName, name: name, subscriptionId: subscriptionId, domainOwnershipIdentifier: domainOwnershipIdentifier)
    }
    public static func Delete(resourceGroupName: String, domainName: String, subscriptionId: String) -> DomainsDelete {
        return DeleteCommand(resourceGroupName: resourceGroupName, domainName: domainName, subscriptionId: subscriptionId)
    }
    public static func DeleteOwnershipIdentifier(resourceGroupName: String, domainName: String, name: String, subscriptionId: String) -> DomainsDeleteOwnershipIdentifier {
        return DeleteOwnershipIdentifierCommand(resourceGroupName: resourceGroupName, domainName: domainName, name: name, subscriptionId: subscriptionId)
    }
    public static func Get(resourceGroupName: String, domainName: String, subscriptionId: String) -> DomainsGet {
        return GetCommand(resourceGroupName: resourceGroupName, domainName: domainName, subscriptionId: subscriptionId)
    }
    public static func GetControlCenterSsoRequest(subscriptionId: String) -> DomainsGetControlCenterSsoRequest {
        return GetControlCenterSsoRequestCommand(subscriptionId: subscriptionId)
    }
    public static func GetOwnershipIdentifier(resourceGroupName: String, domainName: String, name: String, subscriptionId: String) -> DomainsGetOwnershipIdentifier {
        return GetOwnershipIdentifierCommand(resourceGroupName: resourceGroupName, domainName: domainName, name: name, subscriptionId: subscriptionId)
    }
    public static func List(subscriptionId: String) -> DomainsList {
        return ListCommand(subscriptionId: subscriptionId)
    }
    public static func ListByResourceGroup(resourceGroupName: String, subscriptionId: String) -> DomainsListByResourceGroup {
        return ListByResourceGroupCommand(resourceGroupName: resourceGroupName, subscriptionId: subscriptionId)
    }
    public static func ListOwnershipIdentifiers(resourceGroupName: String, domainName: String, subscriptionId: String) -> DomainsListOwnershipIdentifiers {
        return ListOwnershipIdentifiersCommand(resourceGroupName: resourceGroupName, domainName: domainName, subscriptionId: subscriptionId)
    }
    public static func ListRecommendations(subscriptionId: String, parameters: DomainRecommendationSearchParametersProtocol) -> DomainsListRecommendations {
        return ListRecommendationsCommand(subscriptionId: subscriptionId, parameters: parameters)
    }
    public static func Renew(resourceGroupName: String, domainName: String, subscriptionId: String) -> DomainsRenew {
        return RenewCommand(resourceGroupName: resourceGroupName, domainName: domainName, subscriptionId: subscriptionId)
    }
    public static func Update(resourceGroupName: String, domainName: String, subscriptionId: String, domain: DomainPatchResourceProtocol) -> DomainsUpdate {
        return UpdateCommand(resourceGroupName: resourceGroupName, domainName: domainName, subscriptionId: subscriptionId, domain: domain)
    }
    public static func UpdateOwnershipIdentifier(resourceGroupName: String, domainName: String, name: String, subscriptionId: String, domainOwnershipIdentifier: DomainOwnershipIdentifierProtocol) -> DomainsUpdateOwnershipIdentifier {
        return UpdateOwnershipIdentifierCommand(resourceGroupName: resourceGroupName, domainName: domainName, name: name, subscriptionId: subscriptionId, domainOwnershipIdentifier: domainOwnershipIdentifier)
    }
}
}
