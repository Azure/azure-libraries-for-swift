// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
import Foundation
import azureSwiftRuntime
internal struct AutoHealRulesData : AutoHealRulesProtocol {
    public var triggers: AutoHealTriggersProtocol?
    public var actions: AutoHealActionsProtocol?

        enum CodingKeys: String, CodingKey {case triggers = "triggers"
        case actions = "actions"
        }

  public init()  {
  }

  public init(from decoder: Decoder) throws {
    let container = try decoder.container(keyedBy: CodingKeys.self)
      if container.contains(.triggers) {
        self.triggers = try container.decode(AutoHealTriggersData?.self, forKey: .triggers)
    }
    if container.contains(.actions) {
        self.actions = try container.decode(AutoHealActionsData?.self, forKey: .actions)
    }
    if var pageDecoder = decoder as? PageDecoder  {
      if pageDecoder.isPagedData,
        let nextLinkName = pageDecoder.nextLinkName {
          pageDecoder.nextLink = try UnknownCodingKey.decodeStringForKey(decoder: decoder, keyForDecode: nextLinkName)
      }
    }
  }

  public func encode(to encoder: Encoder) throws {
    var container = encoder.container(keyedBy: CodingKeys.self)
    if self.triggers != nil {try container.encode(self.triggers as! AutoHealTriggersData?, forKey: .triggers)}
    if self.actions != nil {try container.encode(self.actions as! AutoHealActionsData?, forKey: .actions)}
  }
}

extension DataFactory {
  public static func createAutoHealRulesProtocol() -> AutoHealRulesProtocol {
    return AutoHealRulesData()
  }
}
