// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
import Foundation
import azureSwiftRuntime
internal struct DomainControlCenterSsoRequestData : DomainControlCenterSsoRequestProtocol {
    public var url: String?
    public var postParameterKey: String?
    public var postParameterValue: String?

        enum CodingKeys: String, CodingKey {case url = "url"
        case postParameterKey = "postParameterKey"
        case postParameterValue = "postParameterValue"
        }

  public init()  {
  }

  public init(from decoder: Decoder) throws {
    let container = try decoder.container(keyedBy: CodingKeys.self)
      if container.contains(.url) {
        self.url = try container.decode(String?.self, forKey: .url)
    }
    if container.contains(.postParameterKey) {
        self.postParameterKey = try container.decode(String?.self, forKey: .postParameterKey)
    }
    if container.contains(.postParameterValue) {
        self.postParameterValue = try container.decode(String?.self, forKey: .postParameterValue)
    }
    if var pageDecoder = decoder as? PageDecoder  {
      if pageDecoder.isPagedData,
        let nextLinkName = pageDecoder.nextLinkName {
          pageDecoder.nextLink = try UnknownCodingKey.decodeStringForKey(decoder: decoder, keyForDecode: nextLinkName)
      }
    }
  }

  public func encode(to encoder: Encoder) throws {
    var container = encoder.container(keyedBy: CodingKeys.self)
    if self.url != nil {try container.encode(self.url, forKey: .url)}
    if self.postParameterKey != nil {try container.encode(self.postParameterKey, forKey: .postParameterKey)}
    if self.postParameterValue != nil {try container.encode(self.postParameterValue, forKey: .postParameterValue)}
  }
}

extension DataFactory {
  public static func createDomainControlCenterSsoRequestProtocol() -> DomainControlCenterSsoRequestProtocol {
    return DomainControlCenterSsoRequestData()
  }
}
