// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.

// FailoverGroups is the the Azure SQL Database management API provides a RESTful set of web services that interact
// with Azure SQL Database services to manage your databases. The API enables you to create, retrieve, update, and
// delete databases.
import Foundation
import azureSwiftRuntime
extension Commands {
public struct FailoverGroups {
    public static func CreateOrUpdate(resourceGroupName: String, serverName: String, failoverGroupName: String, subscriptionId: String, parameters: FailoverGroupProtocol) -> FailoverGroupsCreateOrUpdate {
        return CreateOrUpdateCommand(resourceGroupName: resourceGroupName, serverName: serverName, failoverGroupName: failoverGroupName, subscriptionId: subscriptionId, parameters: parameters)
    }
    public static func Delete(resourceGroupName: String, serverName: String, failoverGroupName: String, subscriptionId: String) -> FailoverGroupsDelete {
        return DeleteCommand(resourceGroupName: resourceGroupName, serverName: serverName, failoverGroupName: failoverGroupName, subscriptionId: subscriptionId)
    }
    public static func Failover(resourceGroupName: String, serverName: String, failoverGroupName: String, subscriptionId: String) -> FailoverGroupsFailover {
        return FailoverCommand(resourceGroupName: resourceGroupName, serverName: serverName, failoverGroupName: failoverGroupName, subscriptionId: subscriptionId)
    }
    public static func ForceFailoverAllowDataLoss(resourceGroupName: String, serverName: String, failoverGroupName: String, subscriptionId: String) -> FailoverGroupsForceFailoverAllowDataLoss {
        return ForceFailoverAllowDataLossCommand(resourceGroupName: resourceGroupName, serverName: serverName, failoverGroupName: failoverGroupName, subscriptionId: subscriptionId)
    }
    public static func Get(resourceGroupName: String, serverName: String, failoverGroupName: String, subscriptionId: String) -> FailoverGroupsGet {
        return GetCommand(resourceGroupName: resourceGroupName, serverName: serverName, failoverGroupName: failoverGroupName, subscriptionId: subscriptionId)
    }
    public static func ListByServer(resourceGroupName: String, serverName: String, subscriptionId: String) -> FailoverGroupsListByServer {
        return ListByServerCommand(resourceGroupName: resourceGroupName, serverName: serverName, subscriptionId: subscriptionId)
    }
    public static func Update(resourceGroupName: String, serverName: String, failoverGroupName: String, subscriptionId: String, parameters: FailoverGroupUpdateProtocol) -> FailoverGroupsUpdate {
        return UpdateCommand(resourceGroupName: resourceGroupName, serverName: serverName, failoverGroupName: failoverGroupName, subscriptionId: subscriptionId, parameters: parameters)
    }
}
}
