// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.

// Servers is the the Azure SQL Database management API provides a RESTful set of web services that interact with Azure
// SQL Database services to manage your databases. The API enables you to create, retrieve, update, and delete
// databases.
import Foundation
import azureSwiftRuntime
extension Commands {
public struct Servers {
    public static func CheckNameAvailability(subscriptionId: String, parameters: CheckNameAvailabilityRequestProtocol) -> ServersCheckNameAvailability {
        return CheckNameAvailabilityCommand(subscriptionId: subscriptionId, parameters: parameters)
    }
    public static func CreateOrUpdate(resourceGroupName: String, serverName: String, subscriptionId: String, parameters: ServerProtocol) -> ServersCreateOrUpdate {
        return CreateOrUpdateCommand(resourceGroupName: resourceGroupName, serverName: serverName, subscriptionId: subscriptionId, parameters: parameters)
    }
    public static func Delete(resourceGroupName: String, serverName: String, subscriptionId: String) -> ServersDelete {
        return DeleteCommand(resourceGroupName: resourceGroupName, serverName: serverName, subscriptionId: subscriptionId)
    }
    public static func Get(resourceGroupName: String, serverName: String, subscriptionId: String) -> ServersGet {
        return GetCommand(resourceGroupName: resourceGroupName, serverName: serverName, subscriptionId: subscriptionId)
    }
    public static func List(subscriptionId: String) -> ServersList {
        return ListCommand(subscriptionId: subscriptionId)
    }
    public static func ListByResourceGroup(resourceGroupName: String, subscriptionId: String) -> ServersListByResourceGroup {
        return ListByResourceGroupCommand(resourceGroupName: resourceGroupName, subscriptionId: subscriptionId)
    }
    public static func Update(resourceGroupName: String, serverName: String, subscriptionId: String, parameters: ServerUpdateProtocol) -> ServersUpdate {
        return UpdateCommand(resourceGroupName: resourceGroupName, serverName: serverName, subscriptionId: subscriptionId, parameters: parameters)
    }
}
}
