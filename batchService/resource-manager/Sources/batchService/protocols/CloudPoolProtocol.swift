// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
import Foundation
// CloudPoolProtocol is
public protocol CloudPoolProtocol : Codable {
     var id: String? { get set }
     var displayName: String? { get set }
     var url: String? { get set }
     var eTag: String? { get set }
     var lastModified: Date? { get set }
     var creationTime: Date? { get set }
     var state: PoolStateEnum? { get set }
     var stateTransitionTime: Date? { get set }
     var allocationState: AllocationStateEnum? { get set }
     var allocationStateTransitionTime: Date? { get set }
     var vmSize: String? { get set }
     var cloudServiceConfiguration: CloudServiceConfigurationProtocol? { get set }
     var virtualMachineConfiguration: VirtualMachineConfigurationProtocol? { get set }
     var resizeTimeout: String? { get set }
     var resizeErrors: [ResizeErrorProtocol?]? { get set }
     var currentDedicatedNodes: Int32? { get set }
     var currentLowPriorityNodes: Int32? { get set }
     var targetDedicatedNodes: Int32? { get set }
     var targetLowPriorityNodes: Int32? { get set }
     var enableAutoScale: Bool? { get set }
     var autoScaleFormula: String? { get set }
     var autoScaleEvaluationInterval: String? { get set }
     var autoScaleRun: AutoScaleRunProtocol? { get set }
     var enableInterNodeCommunication: Bool? { get set }
     var networkConfiguration: NetworkConfigurationProtocol? { get set }
     var startTask: StartTaskProtocol? { get set }
     var certificateReferences: [CertificateReferenceProtocol?]? { get set }
     var applicationPackageReferences: [ApplicationPackageReferenceProtocol?]? { get set }
     var applicationLicenses: [String]? { get set }
     var maxTasksPerNode: Int32? { get set }
     var taskSchedulingPolicy: TaskSchedulingPolicyProtocol? { get set }
     var userAccounts: [UserAccountProtocol?]? { get set }
     var metadata: [MetadataItemProtocol?]? { get set }
     var stats: PoolStatisticsProtocol? { get set }
}
