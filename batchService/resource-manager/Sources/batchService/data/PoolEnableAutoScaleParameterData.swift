// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
import Foundation
import azureSwiftRuntime
internal struct PoolEnableAutoScaleParameterData : PoolEnableAutoScaleParameterProtocol {
    public var autoScaleFormula: String?
    public var autoScaleEvaluationInterval: String?

        enum CodingKeys: String, CodingKey {case autoScaleFormula = "autoScaleFormula"
        case autoScaleEvaluationInterval = "autoScaleEvaluationInterval"
        }

  public init()  {
  }

  public init(from decoder: Decoder) throws {
    let container = try decoder.container(keyedBy: CodingKeys.self)
      if container.contains(.autoScaleFormula) {
        self.autoScaleFormula = try container.decode(String?.self, forKey: .autoScaleFormula)
    }
    if container.contains(.autoScaleEvaluationInterval) {
        self.autoScaleEvaluationInterval = try container.decode(String?.self, forKey: .autoScaleEvaluationInterval)
    }
    if var pageDecoder = decoder as? PageDecoder  {
      if pageDecoder.isPagedData,
        let nextLinkName = pageDecoder.nextLinkName {
          pageDecoder.nextLink = try UnknownCodingKey.decodeStringForKey(decoder: decoder, keyForDecode: nextLinkName)
      }
    }
  }

  public func encode(to encoder: Encoder) throws {
    var container = encoder.container(keyedBy: CodingKeys.self)
    if self.autoScaleFormula != nil {try container.encode(self.autoScaleFormula, forKey: .autoScaleFormula)}
    if self.autoScaleEvaluationInterval != nil {try container.encode(self.autoScaleEvaluationInterval, forKey: .autoScaleEvaluationInterval)}
  }
}

extension DataFactory {
  public static func createPoolEnableAutoScaleParameterProtocol() -> PoolEnableAutoScaleParameterProtocol {
    return PoolEnableAutoScaleParameterData()
  }
}
