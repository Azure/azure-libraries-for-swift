// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
import Foundation
import azureSwiftRuntime
internal struct OutputFileDestinationData : OutputFileDestinationProtocol {
    public var container: OutputFileBlobContainerDestinationProtocol?

        enum CodingKeys: String, CodingKey {case container = "container"
        }

  public init()  {
  }

  public init(from decoder: Decoder) throws {
    let container = try decoder.container(keyedBy: CodingKeys.self)
      if container.contains(.container) {
        self.container = try container.decode(OutputFileBlobContainerDestinationData?.self, forKey: .container)
    }
    if var pageDecoder = decoder as? PageDecoder  {
      if pageDecoder.isPagedData,
        let nextLinkName = pageDecoder.nextLinkName {
          pageDecoder.nextLink = try UnknownCodingKey.decodeStringForKey(decoder: decoder, keyForDecode: nextLinkName)
      }
    }
  }

  public func encode(to encoder: Encoder) throws {
    var container = encoder.container(keyedBy: CodingKeys.self)
    if self.container != nil {try container.encode(self.container as! OutputFileBlobContainerDestinationData?, forKey: .container)}
  }
}

extension DataFactory {
  public static func createOutputFileDestinationProtocol() -> OutputFileDestinationProtocol {
    return OutputFileDestinationData()
  }
}
