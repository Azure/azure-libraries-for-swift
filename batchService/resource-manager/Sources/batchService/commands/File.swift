// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.

// File is the a client for issuing REST requests to the Azure Batch service.
import Foundation
import azureSwiftRuntime
extension Commands {
public struct File {
    public static func DeleteFromComputeNode(poolId: String, nodeId: String, filePath: String) -> FileDeleteFromComputeNode {
        return DeleteFromComputeNodeCommand(poolId: poolId, nodeId: nodeId, filePath: filePath)
    }
    public static func DeleteFromTask(jobId: String, taskId: String, filePath: String) -> FileDeleteFromTask {
        return DeleteFromTaskCommand(jobId: jobId, taskId: taskId, filePath: filePath)
    }
    public static func GetFromComputeNode(poolId: String, nodeId: String, filePath: String) -> FileGetFromComputeNode {
        return GetFromComputeNodeCommand(poolId: poolId, nodeId: nodeId, filePath: filePath)
    }
    public static func GetFromTask(jobId: String, taskId: String, filePath: String) -> FileGetFromTask {
        return GetFromTaskCommand(jobId: jobId, taskId: taskId, filePath: filePath)
    }
    public static func GetPropertiesFromComputeNode(poolId: String, nodeId: String, filePath: String) -> FileGetPropertiesFromComputeNode {
        return GetPropertiesFromComputeNodeCommand(poolId: poolId, nodeId: nodeId, filePath: filePath)
    }
    public static func GetPropertiesFromTask(jobId: String, taskId: String, filePath: String) -> FileGetPropertiesFromTask {
        return GetPropertiesFromTaskCommand(jobId: jobId, taskId: taskId, filePath: filePath)
    }
    public static func ListFromComputeNode(poolId: String, nodeId: String) -> FileListFromComputeNode {
        return ListFromComputeNodeCommand(poolId: poolId, nodeId: nodeId)
    }
    public static func ListFromTask(jobId: String, taskId: String) -> FileListFromTask {
        return ListFromTaskCommand(jobId: jobId, taskId: taskId)
    }
}
}
