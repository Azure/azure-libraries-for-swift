// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
import Foundation
import azureSwiftRuntime
internal struct SalesforceConnectorPropertiesData : SalesforceConnectorPropertiesProtocol {
    public var usersetting: SalesforceDiscoverSettingProtocol
    public var salesforcetables: [SalesforceTableProtocol]

        enum CodingKeys: String, CodingKey {case usersetting = "usersetting"
        case salesforcetables = "salesforcetables"
        }

  public init(usersetting: SalesforceDiscoverSettingProtocol, salesforcetables: [SalesforceTableProtocol])  {
    self.usersetting = usersetting
    self.salesforcetables = salesforcetables
  }

  public init(from decoder: Decoder) throws {
    let container = try decoder.container(keyedBy: CodingKeys.self)
      self.usersetting = try container.decode(SalesforceDiscoverSettingData.self, forKey: .usersetting)
    self.salesforcetables = try container.decode([SalesforceTableData].self, forKey: .salesforcetables)
    if var pageDecoder = decoder as? PageDecoder  {
      if pageDecoder.isPagedData,
        let nextLinkName = pageDecoder.nextLinkName {
          pageDecoder.nextLink = try UnknownCodingKey.decodeStringForKey(decoder: decoder, keyForDecode: nextLinkName)
      }
    }
  }

  public func encode(to encoder: Encoder) throws {
    var container = encoder.container(keyedBy: CodingKeys.self)
    try container.encode(self.usersetting as! SalesforceDiscoverSettingData, forKey: .usersetting)
    try container.encode(self.salesforcetables as! [SalesforceTableData], forKey: .salesforcetables)
  }
}

extension DataFactory {
  public static func createSalesforceConnectorPropertiesProtocol(usersetting: SalesforceDiscoverSettingProtocol, salesforcetables: [SalesforceTableProtocol]) -> SalesforceConnectorPropertiesProtocol {
    return SalesforceConnectorPropertiesData(usersetting: usersetting, salesforcetables: salesforcetables)
  }
}
