// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
import Foundation
import azureSwiftRuntime
internal struct RelationshipTypeMappingData : RelationshipTypeMappingProtocol {
    public var fieldMappings: [RelationshipTypeFieldMappingProtocol]

        enum CodingKeys: String, CodingKey {case fieldMappings = "fieldMappings"
        }

  public init(fieldMappings: [RelationshipTypeFieldMappingProtocol])  {
    self.fieldMappings = fieldMappings
  }

  public init(from decoder: Decoder) throws {
    let container = try decoder.container(keyedBy: CodingKeys.self)
      self.fieldMappings = try container.decode([RelationshipTypeFieldMappingData].self, forKey: .fieldMappings)
    if var pageDecoder = decoder as? PageDecoder  {
      if pageDecoder.isPagedData,
        let nextLinkName = pageDecoder.nextLinkName {
          pageDecoder.nextLink = try UnknownCodingKey.decodeStringForKey(decoder: decoder, keyForDecode: nextLinkName)
      }
    }
  }

  public func encode(to encoder: Encoder) throws {
    var container = encoder.container(keyedBy: CodingKeys.self)
    try container.encode(self.fieldMappings as! [RelationshipTypeFieldMappingData], forKey: .fieldMappings)
  }
}

extension DataFactory {
  public static func createRelationshipTypeMappingProtocol(fieldMappings: [RelationshipTypeFieldMappingProtocol]) -> RelationshipTypeMappingProtocol {
    return RelationshipTypeMappingData(fieldMappings: fieldMappings)
  }
}
