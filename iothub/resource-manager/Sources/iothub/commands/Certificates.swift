// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.

// Certificates is the use this API to manage the IoT hubs in your Azure subscription.
import Foundation
import azureSwiftRuntime
extension Commands {
public struct Certificates {
    public static func CreateOrUpdate(subscriptionId: String, resourceGroupName: String, resourceName: String, certificateName: String, certificateDescription: CertificateBodyDescriptionProtocol) -> CertificatesCreateOrUpdate {
        return CreateOrUpdateCommand(subscriptionId: subscriptionId, resourceGroupName: resourceGroupName, resourceName: resourceName, certificateName: certificateName, certificateDescription: certificateDescription)
    }
    public static func Delete(subscriptionId: String, resourceGroupName: String, resourceName: String, certificateName: String, ifMatch: String) -> CertificatesDelete {
        return DeleteCommand(subscriptionId: subscriptionId, resourceGroupName: resourceGroupName, resourceName: resourceName, certificateName: certificateName, ifMatch: ifMatch)
    }
    public static func GenerateVerificationCode(subscriptionId: String, resourceGroupName: String, resourceName: String, certificateName: String, ifMatch: String) -> CertificatesGenerateVerificationCode {
        return GenerateVerificationCodeCommand(subscriptionId: subscriptionId, resourceGroupName: resourceGroupName, resourceName: resourceName, certificateName: certificateName, ifMatch: ifMatch)
    }
    public static func Get(subscriptionId: String, resourceGroupName: String, resourceName: String, certificateName: String) -> CertificatesGet {
        return GetCommand(subscriptionId: subscriptionId, resourceGroupName: resourceGroupName, resourceName: resourceName, certificateName: certificateName)
    }
    public static func ListByIotHub(subscriptionId: String, resourceGroupName: String, resourceName: String) -> CertificatesListByIotHub {
        return ListByIotHubCommand(subscriptionId: subscriptionId, resourceGroupName: resourceGroupName, resourceName: resourceName)
    }
    public static func Verify(subscriptionId: String, resourceGroupName: String, resourceName: String, certificateName: String, ifMatch: String, certificateVerificationBody: CertificateVerificationDescriptionProtocol) -> CertificatesVerify {
        return VerifyCommand(subscriptionId: subscriptionId, resourceGroupName: resourceGroupName, resourceName: resourceName, certificateName: certificateName, ifMatch: ifMatch, certificateVerificationBody: certificateVerificationBody)
    }
}
}
