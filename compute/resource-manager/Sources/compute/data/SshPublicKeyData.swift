// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
import Foundation
import azureSwiftRuntime
internal struct SshPublicKeyData : SshPublicKeyProtocol {
    public var path: String?
    public var keyData: String?

        enum CodingKeys: String, CodingKey {case path = "path"
        case keyData = "keyData"
        }

  public init()  {
  }

  public init(from decoder: Decoder) throws {
    let container = try decoder.container(keyedBy: CodingKeys.self)
      if container.contains(.path) {
        self.path = try container.decode(String?.self, forKey: .path)
    }
    if container.contains(.keyData) {
        self.keyData = try container.decode(String?.self, forKey: .keyData)
    }
    if var pageDecoder = decoder as? PageDecoder  {
      if pageDecoder.isPagedData,
        let nextLinkName = pageDecoder.nextLinkName {
          pageDecoder.nextLink = try UnknownCodingKey.decodeStringForKey(decoder: decoder, keyForDecode: nextLinkName)
      }
    }
  }

  public func encode(to encoder: Encoder) throws {
    var container = encoder.container(keyedBy: CodingKeys.self)
    if self.path != nil {try container.encode(self.path, forKey: .path)}
    if self.keyData != nil {try container.encode(self.keyData, forKey: .keyData)}
  }
}

extension DataFactory {
  public static func createSshPublicKeyProtocol() -> SshPublicKeyProtocol {
    return SshPublicKeyData()
  }
}
