// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
import Foundation
import azureSwiftRuntime
internal struct ContainerServiceSshPublicKeyData : ContainerServiceSshPublicKeyProtocol {
    public var keyData: String

        enum CodingKeys: String, CodingKey {case keyData = "keyData"
        }

  public init(keyData: String)  {
    self.keyData = keyData
  }

  public init(from decoder: Decoder) throws {
    let container = try decoder.container(keyedBy: CodingKeys.self)
      self.keyData = try container.decode(String.self, forKey: .keyData)
    if var pageDecoder = decoder as? PageDecoder  {
      if pageDecoder.isPagedData,
        let nextLinkName = pageDecoder.nextLinkName {
          pageDecoder.nextLink = try UnknownCodingKey.decodeStringForKey(decoder: decoder, keyForDecode: nextLinkName)
      }
    }
  }

  public func encode(to encoder: Encoder) throws {
    var container = encoder.container(keyedBy: CodingKeys.self)
    try container.encode(self.keyData, forKey: .keyData)
  }
}

extension DataFactory {
  public static func createContainerServiceSshPublicKeyProtocol(keyData: String) -> ContainerServiceSshPublicKeyProtocol {
    return ContainerServiceSshPublicKeyData(keyData: keyData)
  }
}
