// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
import Foundation
import azureSwiftRuntime
internal struct ContainerServiceWindowsProfileData : ContainerServiceWindowsProfileProtocol {
    public var adminUsername: String
    public var adminPassword: String

        enum CodingKeys: String, CodingKey {case adminUsername = "adminUsername"
        case adminPassword = "adminPassword"
        }

  public init(adminUsername: String, adminPassword: String)  {
    self.adminUsername = adminUsername
    self.adminPassword = adminPassword
  }

  public init(from decoder: Decoder) throws {
    let container = try decoder.container(keyedBy: CodingKeys.self)
      self.adminUsername = try container.decode(String.self, forKey: .adminUsername)
    self.adminPassword = try container.decode(String.self, forKey: .adminPassword)
    if var pageDecoder = decoder as? PageDecoder  {
      if pageDecoder.isPagedData,
        let nextLinkName = pageDecoder.nextLinkName {
          pageDecoder.nextLink = try UnknownCodingKey.decodeStringForKey(decoder: decoder, keyForDecode: nextLinkName)
      }
    }
  }

  public func encode(to encoder: Encoder) throws {
    var container = encoder.container(keyedBy: CodingKeys.self)
    try container.encode(self.adminUsername, forKey: .adminUsername)
    try container.encode(self.adminPassword, forKey: .adminPassword)
  }
}

extension DataFactory {
  public static func createContainerServiceWindowsProfileProtocol(adminUsername: String, adminPassword: String) -> ContainerServiceWindowsProfileProtocol {
    return ContainerServiceWindowsProfileData(adminUsername: adminUsername, adminPassword: adminPassword)
  }
}
