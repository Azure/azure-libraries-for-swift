// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
import Foundation
import azureSwiftRuntime
internal struct IntegrationAccountMapFilterData : IntegrationAccountMapFilterProtocol {
    public var mapType: MapTypeEnum

        enum CodingKeys: String, CodingKey {case mapType = "mapType"
        }

  public init(mapType: MapTypeEnum)  {
    self.mapType = mapType
  }

  public init(from decoder: Decoder) throws {
    let container = try decoder.container(keyedBy: CodingKeys.self)
      self.mapType = try container.decode(MapTypeEnum.self, forKey: .mapType)
    if var pageDecoder = decoder as? PageDecoder  {
      if pageDecoder.isPagedData,
        let nextLinkName = pageDecoder.nextLinkName {
          pageDecoder.nextLink = try UnknownCodingKey.decodeStringForKey(decoder: decoder, keyForDecode: nextLinkName)
      }
    }
  }

  public func encode(to encoder: Encoder) throws {
    var container = encoder.container(keyedBy: CodingKeys.self)
    try container.encode(self.mapType, forKey: .mapType)
  }
}

extension DataFactory {
  public static func createIntegrationAccountMapFilterProtocol(mapType: MapTypeEnum) -> IntegrationAccountMapFilterProtocol {
    return IntegrationAccountMapFilterData(mapType: mapType)
  }
}
