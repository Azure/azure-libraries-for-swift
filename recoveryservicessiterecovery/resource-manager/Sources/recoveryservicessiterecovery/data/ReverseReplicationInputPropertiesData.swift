// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
import Foundation
import azureSwiftRuntime
internal struct ReverseReplicationInputPropertiesData : ReverseReplicationInputPropertiesProtocol {
    public var failoverDirection: String?
    public var providerSpecificDetails: ReverseReplicationProviderSpecificInputProtocol?

        enum CodingKeys: String, CodingKey {case failoverDirection = "failoverDirection"
        case providerSpecificDetails = "providerSpecificDetails"
        }

  public init()  {
  }

  public init(from decoder: Decoder) throws {
    let container = try decoder.container(keyedBy: CodingKeys.self)
      if container.contains(.failoverDirection) {
        self.failoverDirection = try container.decode(String?.self, forKey: .failoverDirection)
    }
    if container.contains(.providerSpecificDetails) {
        self.providerSpecificDetails = try container.decode(ReverseReplicationProviderSpecificInputData?.self, forKey: .providerSpecificDetails)
    }
    if var pageDecoder = decoder as? PageDecoder  {
      if pageDecoder.isPagedData,
        let nextLinkName = pageDecoder.nextLinkName {
          pageDecoder.nextLink = try UnknownCodingKey.decodeStringForKey(decoder: decoder, keyForDecode: nextLinkName)
      }
    }
  }

  public func encode(to encoder: Encoder) throws {
    var container = encoder.container(keyedBy: CodingKeys.self)
    if self.failoverDirection != nil {try container.encode(self.failoverDirection, forKey: .failoverDirection)}
    if self.providerSpecificDetails != nil {try container.encode(self.providerSpecificDetails as! ReverseReplicationProviderSpecificInputData?, forKey: .providerSpecificDetails)}
  }
}

extension DataFactory {
  public static func createReverseReplicationInputPropertiesProtocol() -> ReverseReplicationInputPropertiesProtocol {
    return ReverseReplicationInputPropertiesData()
  }
}
