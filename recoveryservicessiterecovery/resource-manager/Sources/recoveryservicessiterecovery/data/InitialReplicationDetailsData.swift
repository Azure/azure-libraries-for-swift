// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
import Foundation
import azureSwiftRuntime
internal struct InitialReplicationDetailsData : InitialReplicationDetailsProtocol {
    public var initialReplicationType: String?
    public var initialReplicationProgressPercentage: String?

        enum CodingKeys: String, CodingKey {case initialReplicationType = "initialReplicationType"
        case initialReplicationProgressPercentage = "initialReplicationProgressPercentage"
        }

  public init()  {
  }

  public init(from decoder: Decoder) throws {
    let container = try decoder.container(keyedBy: CodingKeys.self)
      if container.contains(.initialReplicationType) {
        self.initialReplicationType = try container.decode(String?.self, forKey: .initialReplicationType)
    }
    if container.contains(.initialReplicationProgressPercentage) {
        self.initialReplicationProgressPercentage = try container.decode(String?.self, forKey: .initialReplicationProgressPercentage)
    }
    if var pageDecoder = decoder as? PageDecoder  {
      if pageDecoder.isPagedData,
        let nextLinkName = pageDecoder.nextLinkName {
          pageDecoder.nextLink = try UnknownCodingKey.decodeStringForKey(decoder: decoder, keyForDecode: nextLinkName)
      }
    }
  }

  public func encode(to encoder: Encoder) throws {
    var container = encoder.container(keyedBy: CodingKeys.self)
    if self.initialReplicationType != nil {try container.encode(self.initialReplicationType, forKey: .initialReplicationType)}
    if self.initialReplicationProgressPercentage != nil {try container.encode(self.initialReplicationProgressPercentage, forKey: .initialReplicationProgressPercentage)}
  }
}

extension DataFactory {
  public static func createInitialReplicationDetailsProtocol() -> InitialReplicationDetailsProtocol {
    return InitialReplicationDetailsData()
  }
}
