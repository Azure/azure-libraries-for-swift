// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
import Foundation
import azureSwiftRuntime
internal struct ContainerServiceSshConfigurationData : ContainerServiceSshConfigurationProtocol {
    public var publicKeys: [ContainerServiceSshPublicKeyProtocol]

        enum CodingKeys: String, CodingKey {case publicKeys = "publicKeys"
        }

  public init(publicKeys: [ContainerServiceSshPublicKeyProtocol])  {
    self.publicKeys = publicKeys
  }

  public init(from decoder: Decoder) throws {
    let container = try decoder.container(keyedBy: CodingKeys.self)
      self.publicKeys = try container.decode([ContainerServiceSshPublicKeyData].self, forKey: .publicKeys)
    if var pageDecoder = decoder as? PageDecoder  {
      if pageDecoder.isPagedData,
        let nextLinkName = pageDecoder.nextLinkName {
          pageDecoder.nextLink = try UnknownCodingKey.decodeStringForKey(decoder: decoder, keyForDecode: nextLinkName)
      }
    }
  }

  public func encode(to encoder: Encoder) throws {
    var container = encoder.container(keyedBy: CodingKeys.self)
    try container.encode(self.publicKeys as! [ContainerServiceSshPublicKeyData], forKey: .publicKeys)
  }
}

extension DataFactory {
  public static func createContainerServiceSshConfigurationProtocol(publicKeys: [ContainerServiceSshPublicKeyProtocol]) -> ContainerServiceSshConfigurationProtocol {
    return ContainerServiceSshConfigurationData(publicKeys: publicKeys)
  }
}
