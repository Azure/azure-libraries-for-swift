// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
import Foundation
import azureSwiftRuntime
internal struct RecoveryWalkResponseData : RecoveryWalkResponseProtocol {
    public var walkPerformed: Bool?
    public var nextPlatformUpdateDomain: Int32?

        enum CodingKeys: String, CodingKey {case walkPerformed = "walkPerformed"
        case nextPlatformUpdateDomain = "nextPlatformUpdateDomain"
        }

  public init()  {
  }

  public init(from decoder: Decoder) throws {
    let container = try decoder.container(keyedBy: CodingKeys.self)
      if container.contains(.walkPerformed) {
        self.walkPerformed = try container.decode(Bool?.self, forKey: .walkPerformed)
    }
    if container.contains(.nextPlatformUpdateDomain) {
        self.nextPlatformUpdateDomain = try container.decode(Int32?.self, forKey: .nextPlatformUpdateDomain)
    }
    if var pageDecoder = decoder as? PageDecoder  {
      if pageDecoder.isPagedData,
        let nextLinkName = pageDecoder.nextLinkName {
          pageDecoder.nextLink = try UnknownCodingKey.decodeStringForKey(decoder: decoder, keyForDecode: nextLinkName)
      }
    }
  }

  public func encode(to encoder: Encoder) throws {
    var container = encoder.container(keyedBy: CodingKeys.self)
    if self.walkPerformed != nil {try container.encode(self.walkPerformed, forKey: .walkPerformed)}
    if self.nextPlatformUpdateDomain != nil {try container.encode(self.nextPlatformUpdateDomain, forKey: .nextPlatformUpdateDomain)}
  }
}

extension DataFactory {
  public static func createRecoveryWalkResponseProtocol() -> RecoveryWalkResponseProtocol {
    return RecoveryWalkResponseData()
  }
}
