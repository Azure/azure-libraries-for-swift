// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
import Foundation
import azureSwiftRuntime
internal struct OSDiskImageData : OSDiskImageProtocol {
    public var operatingSystem: OperatingSystemTypesEnum

        enum CodingKeys: String, CodingKey {case operatingSystem = "operatingSystem"
        }

  public init(operatingSystem: OperatingSystemTypesEnum)  {
    self.operatingSystem = operatingSystem
  }

  public init(from decoder: Decoder) throws {
    let container = try decoder.container(keyedBy: CodingKeys.self)
      self.operatingSystem = try container.decode(OperatingSystemTypesEnum.self, forKey: .operatingSystem)
    if var pageDecoder = decoder as? PageDecoder  {
      if pageDecoder.isPagedData,
        let nextLinkName = pageDecoder.nextLinkName {
          pageDecoder.nextLink = try UnknownCodingKey.decodeStringForKey(decoder: decoder, keyForDecode: nextLinkName)
      }
    }
  }

  public func encode(to encoder: Encoder) throws {
    var container = encoder.container(keyedBy: CodingKeys.self)
    try container.encode(self.operatingSystem, forKey: .operatingSystem)
  }
}

extension DataFactory {
  public static func createOSDiskImageProtocol(operatingSystem: OperatingSystemTypesEnum) -> OSDiskImageProtocol {
    return OSDiskImageData(operatingSystem: operatingSystem)
  }
}
