// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.

// Vaults is the the Azure management API provides a RESTful set of web services that interact with Azure Key Vault.
import Foundation
import azureSwiftRuntime
extension Commands {
public struct Vaults {
    public static func CheckNameAvailability(subscriptionId: String, vaultName: VaultCheckNameAvailabilityParametersProtocol) -> VaultsCheckNameAvailability {
        return CheckNameAvailabilityCommand(subscriptionId: subscriptionId, vaultName: vaultName)
    }
    public static func CreateOrUpdate(resourceGroupName: String, vaultName: String, subscriptionId: String, parameters: VaultCreateOrUpdateParametersProtocol) -> VaultsCreateOrUpdate {
        return CreateOrUpdateCommand(resourceGroupName: resourceGroupName, vaultName: vaultName, subscriptionId: subscriptionId, parameters: parameters)
    }
    public static func Delete(resourceGroupName: String, vaultName: String, subscriptionId: String) -> VaultsDelete {
        return DeleteCommand(resourceGroupName: resourceGroupName, vaultName: vaultName, subscriptionId: subscriptionId)
    }
    public static func Get(resourceGroupName: String, vaultName: String, subscriptionId: String) -> VaultsGet {
        return GetCommand(resourceGroupName: resourceGroupName, vaultName: vaultName, subscriptionId: subscriptionId)
    }
    public static func GetDeleted(vaultName: String, location: String, subscriptionId: String) -> VaultsGetDeleted {
        return GetDeletedCommand(vaultName: vaultName, location: location, subscriptionId: subscriptionId)
    }
    public static func List(subscriptionId: String, filter: String) -> VaultsList {
        return ListCommand(subscriptionId: subscriptionId, filter: filter)
    }
    public static func ListByResourceGroup(resourceGroupName: String, subscriptionId: String) -> VaultsListByResourceGroup {
        return ListByResourceGroupCommand(resourceGroupName: resourceGroupName, subscriptionId: subscriptionId)
    }
    public static func ListBySubscription(subscriptionId: String) -> VaultsListBySubscription {
        return ListBySubscriptionCommand(subscriptionId: subscriptionId)
    }
    public static func ListDeleted(subscriptionId: String) -> VaultsListDeleted {
        return ListDeletedCommand(subscriptionId: subscriptionId)
    }
    public static func PurgeDeleted(vaultName: String, location: String, subscriptionId: String) -> VaultsPurgeDeleted {
        return PurgeDeletedCommand(vaultName: vaultName, location: location, subscriptionId: subscriptionId)
    }
    public static func Update(resourceGroupName: String, vaultName: String, subscriptionId: String, parameters: VaultPatchParametersProtocol) -> VaultsUpdate {
        return UpdateCommand(resourceGroupName: resourceGroupName, vaultName: vaultName, subscriptionId: subscriptionId, parameters: parameters)
    }
    public static func UpdateAccessPolicy(resourceGroupName: String, vaultName: String, operationKind: AccessPolicyUpdateKindEnum, subscriptionId: String, parameters: VaultAccessPolicyParametersProtocol) -> VaultsUpdateAccessPolicy {
        return UpdateAccessPolicyCommand(resourceGroupName: resourceGroupName, vaultName: vaultName, operationKind: operationKind, subscriptionId: subscriptionId, parameters: parameters)
    }
}
}
